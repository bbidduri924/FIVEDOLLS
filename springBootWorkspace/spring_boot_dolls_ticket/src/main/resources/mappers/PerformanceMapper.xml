<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring_boot_dolls_ticket.project.dao.IPerformanceDAO">
	<resultMap id="performanceResult" type="com.spring_boot_dolls_ticket.project.model.PerformanceVO">
		<result property="performanceId" column="PERFORMANCE_ID"></result>
		<result property="performanceKindCd" column="PERFORMANCE_KIND_CD"></result>
		<result property="performanceRatingCode" column="PERFORMANCE_RATING_CODE"></result>
		<result property="performanceName" column="PERFORMANCE_NAME"></result>
		<result property="performancePriceR" column="PERFORMANCE_PRICE_R"></result>
		<result property="performanceZipcode" column="PERFORMANCE_ZIPCODE"></result>
		<result property="performanceAddress" column="PERFORMANCE_ADDRESS"></result>
		<result property="performanceDetailaddress" column="PERFORMANCE_DETAILADDRESS"></result>
		<result property="performanceDate" column="PERFORMANCE_DATE"></result>
		<result property="reservationOpenExpectedDate" column="RESERVATION_OPEN_EXPECTED_DATE"></result>
		<result property="performanceImagePath" column="PERFORMANCE_IMAGE_PATH"></result>
		<result property="firstChangeDate" column="FIRST_CHANGE_DATE"></result>
		<result property="lastChangeDate" column="LAST_CHANGE_DATE"></result>
		<result property="performanceTime" column="PERFORMANCE_TIME"></result>
		<result property="performancePriceS" column="PERFORMANCE_PRICE_S"></result>
		<result property="performanceDate2" column="PERFORMANCE_DATE2"></result>
	</resultMap>
	<!-- 공연명, 분류, 가격, 등록일 -->
	<select id="listAllPerformance" resultMap="performanceResult">
		SELECT * FROM PERFORMANCE_INFO_M ORDER BY PERFORMANCE_ID
	</select>
	<!-- 공연 정보 수정 -->
	<update id="updatePerformance" parameterType="com.spring_boot_dolls_ticket.project.model.PerformanceVO">
		UPDATE PERFORMANCE_INFO_M SET PERFORMANCE_KIND_CD = #{performanceKindCd}, PERFORMANCE_RATING_CODE = #{performanceRatingCode}, PERFORMANCE_NAME = #{performanceName}, PERFORMANCE_PRICE_R = #{performancePriceR}, PERFORMANCE_PRICE_S = #{performancePriceS}, PERFORMANCE_ZIPCODE = #{performanceZipcode}, PERFORMANCE_ADDRESS = #{performanceAddress}, PERFORMANCE_DETAILADDRESS = #{performanceDetailaddress}, PERFORMANCE_DATE = #{performanceDate}, PERFORMANCE_DATE2 = #{performanceDate2}, RESERVATION_OPEN_EXPECTED_DATE = #{reservationOpenExpectedDate}, LAST_CHANGE_DATE = SYSDATE, PERFORMANCE_TIME = #{performanceTime} WHERE PERFORMANCE_ID = #{performanceId}
	</update>
	<!-- 공연 정보 삭제 -->
	<delete id="deletePerformance" parameterType="string">
		DELETE FROM PERFORMANCE_INFO_M WHERE PERFORMANCE_ID = #{performanceId}
	</delete>
	<!-- 공연 정보 등록 -->
	<insert id="insertPerformance" parameterType="com.spring_boot_dolls_ticket.project.model.PerformanceVO">
		INSERT INTO PERFORMANCE_INFO_M (PERFORMANCE_ID, PERFORMANCE_KIND_CD, PERFORMANCE_RATING_CODE, PERFORMANCE_NAME, PERFORMANCE_PRICE_R, PERFORMANCE_ZIPCODE, PERFORMANCE_ADDRESS, PERFORMANCE_DETAILADDRESS, PERFORMANCE_DATE, RESERVATION_OPEN_EXPECTED_DATE, FIRST_CHANGE_DATE, LAST_CHANGE_DATE, PERFORMANCE_TIME, PERFORMANCE_PRICE_S, PERFORMANCE_DATE2) VALUES (#{performanceId}, #{performanceKindCd}, #{performanceRatingCode}, #{performanceName}, #{performancePriceR}, #{performanceZipcode}, #{performanceAddress}, #{performanceDetailaddress}, #{performanceDate}, #{reservationOpenExpectedDate}, #{firstChangeDate}, #{lastChangeDate}, #{performanceTime}, #{performancePriceS}, #{performanceDate2})
	</insert>
	<select id="detailViewPerformance" parameterType="string" resultType="com.spring_boot_dolls_ticket.project.model.PerformanceVO">
		SELECT PERFORMANCE_ID as performanceId
         , PERFORMANCE_KIND_CD as performanceKindCd
         , PERFORMANCE_RATING_CODE as performanceRatingCode
         , PERFORMANCE_NAME as performanceName
         , PERFORMANCE_PRICE_R as performancePriceR
         , PERFORMANCE_ZIPCODE as performanceZipcode
         , PERFORMANCE_ADDRESS as performanceAddress
         , PERFORMANCE_DETAILADDRESS as performanceDetailAddress
         , PERFORMANCE_DATE as performanceDate
         , RESERVATION_OPEN_EXPECTED_DATE as reservationOpenExpectedDate
         , PERFORMANCE_TIME as performanceTime
         , PERFORMANCE_PRICE_S as performancePriceS
         , PERFORMANCE_DATE2 as performanceDate2
        FROM PERFORMANCE_INFO_M WHERE PERFORMANCE_ID=#{performanceId}    
	</select>
	<select id="getLatestEvent" resultType="com.spring_boot_dolls_ticket.project.model.PerformanceVO">
        SELECT PERFORMANCE_ID as performanceId
         , PERFORMANCE_KIND_CD as performanceKindCd
         , PERFORMANCE_RATING_CODE as performanceRatingCode
         , PERFORMANCE_NAME as performanceName
         , PERFORMANCE_PRICE_R as performancePriceR
         , PERFORMANCE_ZIPCODE as performanceZipcode
         , PERFORMANCE_ADDRESS as performanceAddress
         , PERFORMANCE_DETAILADDRESS as performanceDetailAddress
         , PERFORMANCE_DATE as performanceDate
         , RESERVATION_OPEN_EXPECTED_DATE as reservationOpenExpectedDate
         , PERFORMANCE_TIME as performanceTime
         , PERFORMANCE_PRICE_S as performancePriceS
         , PERFORMANCE_DATE2 as performanceDate2
        FROM PERFORMANCE_INFO_M ORDER BY PERFORMANCE_ID FETCH FIRST 1 ROWS ONLY
    </select>
</mapper>